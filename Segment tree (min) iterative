#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
int inf_int=2e9;
ll inf_ll=1e18;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()

bool debug=0;
const int MAXN=1e5+100000;
int mod=1e9+9;


#define rank asfalgalsglasgllzxdgl
struct SegmentTree
{
    int n;
    int t[2*MAXN];
    void init(int N)
    {
        n=1;
        while(n<N)
          n<<=1;
        for(int i=n+N;i<=2*n;++i)
            t[i]=inf_int;
    }
    void build()
    {
        for(int i=n-1;i>0;--i)
        {
            t[i]=min(t[i<<1],t[i<<1|1]);
        }

    }
    void update(int pos,int val)
    {
        for(t[pos+=n]=val;pos>1;pos>>=1)
            t[pos>>1]=min(t[pos],t[pos^1]);
    }
    int get(int l,int r)  //  [l,r)
    {
        int res=inf_int;
        for(l+=n,r+=n;l<r;l>>=1,r>>=1)
        {
            if(l&1)
                res=min(res,t[l++]);
            if(r&1)
                res=min(res,t[--r]);
        }
        return res;
    }
} tr;

void solve()
{
    int n;
    cin >> n;
    tr.init(n);
    for(int i=0;i<n;++i)
    {
        int x;
        cin >> x;
        tr.t[i+tr.n]=x;
    }
    tr.build();
}
